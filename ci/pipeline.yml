jobs:
- name: absolute-unit
  plan:
  - get: projects-operator
    trigger: true
  - task: unit
    file: projects-operator/ci/tasks/unit.yml

- name: acceptance
  plan:
  - get: projects-operator
    trigger: true
    passed: [absolute-unit]
  - task: acceptance
    file: projects-operator/ci/tasks/acceptance.yml
    params:
      KUBECONFIG_FILE_CONTENTS: {{KUBECONFIG_FILE_CONTENTS}}
      UAA_LOCATION: {{UAA_LOCATION}}
      CLUSTER_API_LOCATION: {{CLUSTER_API_LOCATION}}
      CLUSTER_NAME: ci-projects-operator
      CODY_PASSWORD: {{CODY_PASSWORD}}

- name: build
  plan:
  - in_parallel:
    - get: projects-operator
      trigger: true
      passed: [acceptance]
    - get: version
      params:
        pre: dev
  - task: build-image
    privileged: true
    file: projects-operator/ci/tasks/build-image.yml
  - task: deplab
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: pivotalnavcon/deplab-task}
      inputs:
      - name: projects-operator
      - name: image
      - name: version
      outputs:
      - name: tagged-image
      run:
        path: /bin/bash
        args:
        - -ec
        - |
          set -eu pipefail
          DPKG_FILENAME="tagged-image/projects-operator-dpkg-$(cat version/version).txt"
          deplab --image-tar image/image.tar \
            --git projects-operator \
            --output-tar tagged-image/image.tar \
            --dpkg-file ${DPKG_FILENAME}
  - task: package-helm-chart
    file: projects-operator/ci/tasks/assemble-build-artefact.yml
  - in_parallel:
    - put: version
      params:
        file: version/version
    - put: build-artefacts-dev
      params:
        file: archive/projects-operator-*.tgz
    - put: gcr-repository
      params:
        image: tagged-image/image.tar
        additional_tags: version/number
    - put: dpkg-list
      params:
        file: tagged-image/projects-operator-dpkg-*.txt

# - name: release
#   plan:
#   - get: version
#     trigger: true
#   - get: projects-operator
#     passed: [acceptance]
#   - task: assemble-build-artefact
#     file: projects-operator/ci/tasks/assemble-build-artefact.yml
#   - task: build-image
#     privileged: true
#     file: projects-operator/ci/tasks/build-image.yml
#   - task: deplab
#     privileged: true
#     config:
#       platform: linux
#       image_resource:
#         type: docker-image
#         source: {repository: pivotalnavcon/deplab-task}
#       inputs:
#       - name: projects-operator
#       - name: image
#       - name: version
#       outputs:
#       - name: tagged-image
#       run:
#         path: /bin/bash
#         args:
#         - -ec
#         - |
#           set -eu pipefail
#           DPKG_FILENAME="tagged-image/projects-dpkg-$(cat version/version).txt"
#           deplab --image-tar image/image.tar \
#             --git projects-operator \
#             --output-tar tagged-image/image.tar \
#             --dpkg-file ${DPKG_FILENAME}
#   - put: build-artefacts
#     params:
#       file: archive/projects-operator-*.tgz
#   - put: gcr-repository
#     params:
#       image: tagged-image/image.tar
#       additional_tags: version/number
#   - put: dpkg-list
#     params:
#       file: tagged-image/projects-dpkg-*.txt
#   - put: projects-operator
#     params:
#       repository: projects-operator
#       only_tag: true
#       tag: version/number
#       tag_prefix: v

- name: bump-major
  plan:
    - get: version
      params: {bump: major}
    - put: version
      params: {file: version/number}

- name: bump-minor
  plan:
    - get: version
      params: {bump: minor}
    - put: version
      params: {file: version/number}

- name: bump-patch
  plan:
    - get: version
      params: {bump: patch}
    - put: version
      params: {file: version/number}

resources:
- name: projects-operator
  type: git
  icon: github-face
  source:
    private_key: {{PROJECTS_OPERATOR_DEPLOY_KEY}}
    uri: git@github.com:pivotal/projects-operator
    branch: master

- name: gcr-repository
  type: registry-image
  icon: docker
  source:
    repository: gcr.io/cf-ism-0/projects-operator
    username: _json_key
    password: {{GCR_SERVICE_ACCOUNT_KEY}}

- name: build-artefacts-dev
  type: google-cloud-storage
  icon: harddisk
  source:
    bucket: pdc-projects-operator-dev
    json_key: {{GCS_SERVICE_ACCOUNT_PROJECTS_DEV}}
    regexp: projects-operator-(.*).tgz

- name: dpkg-list
  type: google-cloud-storage
  icon: format-list-bulleted
  source:
    bucket: pdc-osl-files
    json_key: {{GCS_SERVICE_ACCOUNT_PDC_OSL_FILES}}
    regexp: projects-operator-dpkg-(.*).txt

- name: version
  type: semver
  icon: one-up
  source:
    driver: gcs
    bucket: pdc-version-files
    json_key: {{GCS_SERVICE_ACCOUNT_PDC_VERSION_FILES}}
    key: projects-operator
    initial_version: 0.0.1

resource_types:
  - name: google-cloud-storage
    type: docker-image
    source:
      repository: frodenas/gcs-resource
