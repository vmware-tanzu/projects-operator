#@ load("@ytt:data", "data")
#@ load("@ytt:base64", "base64")
---
apiVersion: v1
kind: Secret
metadata:
  name: #@ data.values.instance + "-" + data.values.name + "-webhook-cert"
data:
  cert.pem: #@ base64.encode(data.values.tls.cert)
  key.pem: #@ base64.encode(data.values.tls.key)
---
apiVersion: v1
kind: Service
metadata:
  name: #@ data.values.instance + '-' + data.values.name + "-webhook"
  labels:
    app: #@ data.values.instance + '-' + data.values.name + "-webhook"
    release: #@ data.values.instance
spec:
  selector:
    app: #@ data.values.instance + '-' + data.values.name + "-webhook"
  ports:
  - name: secure
    protocol: TCP
    port: 443
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: #@ data.values.instance + '-' + data.values.name + "-webhook"
  labels:
    app: #@ data.values.instance + '-' + data.values.name + "-webhook"
    release: #@ data.values.instance
  annotations:
    kapp.k14s.io/disable-original: "" #! Always rotate the webhook for new TLS certs
    kapp.k14s.io/update-strategy: "always-replace" #! Always rotate the webhook for new TLS certs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: #@ data.values.instance + '-' + data.values.name + "-webhook"
  template:
    metadata:
      labels:
        app: #@ data.values.instance + '-' + data.values.name + "-webhook"
        release: #@ data.values.instance
        releaseRevision: #@ data.values.version
    spec:
      serviceAccountName: "default"
      imagePullSecrets:
      - name: #@ data.values.registry.secretName
      containers:
      - name: webhook
        image: #@ "dev.registry.pivotal.io/developer-console/projects-operator:" + data.values.version
        command:
        - /webhook
        env:
        - name: TLS_KEY_FILEPATH
          value: "/etc/certs/key.pem"
        - name: TLS_CERT_FILEPATH
          value: "/etc/certs/cert.pem"
        resources:
          limits:
            memory: 50Mi
            cpu: 300m
          requests:
            memory: 00Mi
            cpu: 300m
        volumeMounts:
        - name: webhook-cert
          mountPath: /etc/certs
          readOnly: true
        - name: logs
          mountPath: /tmp
        securityContext:
          readOnlyRootFilesystem: true
      volumes:
      - name: webhook-cert
        secret:
          secretName: #@ data.values.instance + '-' + data.values.name + "-webhook-cert"
      - name: logs
        emptyDir: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: #@ data.values.instance + '-' + data.values.name + "projectaccess-webhook-configuration"
webhooks:
- clientConfig:
    caBundle: #@ base64.encode(data.values.caCert)
    service:
      name: #@ data.values.instance + '-' + data.values.name + "-webhook"
      path: /projectaccess
      namespace: #@ data.values.namespace
  failurePolicy: Fail
  name: projectaccess.projects.vmware.com
  rules:
  - apiGroups:
    - projects.vmware.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - projectaccesses
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: #@ data.values.instance + '-' + data.values.name + "project-webhook-configuration"
webhooks:
- clientConfig:
    caBundle: #@ base64.encode(data.values.caCert)
    service:
      name: #@ data.values.instance + '-' + data.values.name + "-webhook"
      path: /project-create
      namespace: #@ data.values.namespace
  failurePolicy: Fail
  name: project.projects.vmware.com
  rules:
  - apiGroups:
    - projects.vmware.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - projects
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: #@ data.values.instance + '-' + data.values.name + "project-webhook-configuration"
webhooks:
- clientConfig:
    caBundle: #@ base64.encode(data.values.caCert)
    service:
      name: #@ data.values.instance + '-' + data.values.name + "-webhook"
      path: /project
      namespace: #@ data.values.namespace
  failurePolicy: Fail
  name: project.projects.vmware.com
  rules:
  - apiGroups:
    - projects.vmware.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - projects