#!/bin/bash

set -euo pipefail

NAMESPACE="${NAMESPACE:-"projects-operator"}"

CHART_PATH="${CHART_PATH:-""}"

REGISTRY_PROJECT="${REGISTRY_PROJECT:-dev}"
REGISTRY_SECRET_NAME="${REGISTRY_SECRET_NAME:-registry-secret}"
REGISTRY_URL="${REGISTRY_URL:?"please set the url of your registry"}"
REGISTRY_HOST="${REGISTRY_URL#"https://"}"
REGISTRY_USERNAME="${REGISTRY_USERNAME:?"please set the username of your registry"}"
REGISTRY_PASSWORD="${REGISTRY_PASSWORD:?"please set the password of your registry"}"
REGISTRY_EMAIL="${REGISTRY_EMAIL:?"please set the email of your registry"}"

prepare_cluster_for_helm_install() {
  if ! kubectl get namespace "$NAMESPACE" >/dev/null 2>&1; then
    kubectl create namespace "$NAMESPACE"
  fi

  kubectl -n "$NAMESPACE" delete secret "$REGISTRY_SECRET_NAME" >/dev/null 2>&1
  kubectl -n "$NAMESPACE" create secret docker-registry "$REGISTRY_SECRET_NAME" \
    --docker-server="$REGISTRY_URL" \
    --docker-username="$REGISTRY_USERNAME" \
    --docker-password="$REGISTRY_PASSWORD" \
    --docker-email="$REGISTRY_EMAIL"
}

main() {
  prepare_cluster_for_helm_install
  local tag="latest"

  if [[ $# -eq 1 && "$1" =~ "--local" ]]; then
    tag="dev-$(hostname)"
  fi

  helm upgrade --install projects-operator "$CHART_PATH" \
    --recreate-pods \
    --namespace "$NAMESPACE" \
    --atomic \
    --set imageRegistry="$REGISTRY_HOST" \
    --set imageNamespace="$REGISTRY_PROJECT" \
    --set images.projectsOperator.tag="$tag" \
    --set imagePullSecrets[0]="$REGISTRY_SECRET_NAME" \
    --set imagePullPolicy="Always" \
    --set clusterRoleRef="$CLUSTER_ROLE_REF"
}

main "$@"
