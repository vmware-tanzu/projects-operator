#!/bin/bash

set -euo pipefail

NAMESPACE=${NAMESPACE:-projects-operator}
CHART_PATH=${CHART_PATH:-helm/projects-operator/}
IMAGE_REPO=${IMAGE_REPO:-gcr.io/cf-ism-0/projects-operator}
IMAGE_TAG=${IMAGE_TAG:-latest}
CLUSTER_ROLE_REF=${CLUSTER_ROLE_REF:-projects-operator-clusterrole-ref-rolebinding}

REGISTRY_SECRET_NAME=${REGISTRY_SECRET_NAME:-registry-secret}
REGISTRY_URL=${REGISTRY_URL:-https://gcr.io}
REGISTRY_USERNAME=${REGISTRY_USERNAME:-_json_key}
REGISTRY_PASSWORD="${REGISTRY_PASSWORD:-$(lpass show "Shared-Independent Services Marketplace/service-account-keys/gcr-service-account-key" --notes)}"
REGISTRY_EMAIL=${REGISTRY_EMAIL:-admin@example.com}

check_requisites () {
  if [ ! -e "$CHART_PATH" ]; then
    echo "CHART_PATH does not point to a helm chart file or directory"
    exit 1
  fi
}

prepare_cluster_for_helm_install () {
  if ! kubectl get namespace "$NAMESPACE" > /dev/null 2>&1; then
    kubectl create namespace "$NAMESPACE"
  fi

  if ! kubectl -n "$NAMESPACE" get secret "$REGISTRY_SECRET_NAME" > /dev/null 2>&1; then
    kubectl -n "$NAMESPACE" create secret docker-registry "$REGISTRY_SECRET_NAME" \
	  --docker-server="$REGISTRY_URL" \
	  --docker-username="$REGISTRY_USERNAME" \
	  --docker-password="$REGISTRY_PASSWORD" \
	  --docker-email="$REGISTRY_EMAIL"
  fi
}

main () {
  # check_requisites
  prepare_cluster_for_helm_install

  helm upgrade --install projects-operator $CHART_PATH \
    --atomic \
    --recreate-pods \
    --namespace "$NAMESPACE" \
    --set image="$IMAGE_REPO:$IMAGE_TAG" \
    --set imagePullSecrets[0].name="$REGISTRY_SECRET_NAME" \
    --set imagePullPolicy="Always" \
    --set clusterRoleRef="$CLUSTER_ROLE_REF"
}

main
